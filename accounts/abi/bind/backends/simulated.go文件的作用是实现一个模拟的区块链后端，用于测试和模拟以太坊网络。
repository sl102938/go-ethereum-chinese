File: accounts/abi/bind/backends/simulated.go
在go-ethereum项目中，accounts/abi/bind/backends/simulated.go文件的作用是实现一个模拟的区块链后端，用于测试和模拟以太坊网络。

其中，以下变量具有以下作用：

errBlockNumberUnsupported：表示不支持指定块号的错误。
errBlockDoesNotExist：表示指定的块不存在的错误。
errTransactionDoesNotExist：表示指定的交易不存在的错误。
以下结构体具有以下作用：

SimulatedBackend：模拟的区块链后端，用于执行交易和查询状态等操作。
revertError：模拟的智能合约回滚错误，用于模拟合约执行失败。
filterBackend：模拟的过滤器后端，用于过滤器相关的操作。
以下函数具有以下作用：

NewSimulatedBackendWithDatabase：创建带有数据库的模拟区块链后端。
NewSimulatedBackend：创建一个新的模拟区块链后端。
Close：关闭模拟区块链后端。
Commit：提交更改到模拟区块链的状态。
Rollback：回滚到指定块号的状态。
rollback：执行回滚操作。
Fork：创建一个分叉块。
stateByBlockNumber：按块号获取区块链状态。
CodeAt：获取合约代码。
BalanceAt：获取账户余额。
NonceAt：获取账户的交易计数器(Nonce)。
StorageAt：获取合约存储的值。
TransactionReceipt：通过交易哈希获取交易回执。
TransactionByHash：通过交易哈希获取交易信息。
BlockByHash：通过块哈希获取块信息。
blockByHash：获取块信息。
BlockByNumber：通过块号获取块信息。
blockByNumber：获取块信息。
HeaderByHash：通过块哈希获取块头信息。
HeaderByNumber：通过块号获取块头信息。
TransactionCount：获取块中的交易数量。
TransactionInBlock：获取指定块中的交易。
PendingCodeAt：获取合约代码(未确认状态)。
newRevertError：创建一个模拟的智能合约回滚错误。
ErrorCode：获取错误码。
ErrorData：获取错误信息。
CallContract：调用合约。
PendingCallContract：在未确认状态下调用合约。
PendingNonceAt：获取账户的未确认交易计数器(Nonce)。
SuggestGasPrice：获取推荐的燃气价格。
SuggestGasTipCap：获取推荐的燃气小费上限。
EstimateGas：估算交易执行所需的燃气量。
callContract：调用合约。
SendTransaction：发送交易。
FilterLogs：过滤日志。
SubscribeFilterLogs：订阅过滤器日志事件。
SubscribeNewHead：订阅新块头事件。
AdjustTime：调整模拟链上的时间。
Blockchain：获取模拟链的区块链数据。
ChainDb：获取链数据库。
EventMux：事件多路复用器。
GetBody：获取块的全部内容。
PendingBlockAndReceipts：获取未确认的块和交易回执。
GetReceipts：获取交易回执。
GetLogs：获取日志。
SubscribeNewTxsEvent：订阅新交易事件。
SubscribeChainEvent：订阅链事件。
SubscribeRemovedLogsEvent：订阅移除的日志事件。
SubscribeLogsEvent：订阅日志事件。
SubscribePendingLogsEvent：订阅未确认的日志事件。
BloomStatus：获取布隆过滤器的状态。
ServiceFilter：服务过滤器。
ChainConfig：链配置。
CurrentHeader：获取当前块头。
nullSubscription：空订阅对象。
